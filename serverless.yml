# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: kirtanmodi
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: intelebee-fintech-backend
# "service" is the name of this project. This will also be added to your AWS resource names.
service: intelebee-fintech-backend

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    STRIPE_SECRET_KEY: ${env:STRIPE_SECRET_KEY}
  httpApi:
    cors: true

functions:
  # Express Account Functions
  createExpressOnboarding:
    handler: src/handlers/stripe.createExpressOnboardingLink
    events:
      - httpApi:
          path: /express/onboarding
          method: post

  createExpressDashboard:
    handler: src/handlers/stripe.createExpressDashboardLink
    events:
      - httpApi:
          path: /express/dashboard
          method: post

  updateExpressDashboard:
    handler: src/handlers/stripe.expressDashboardSettings
    events:
      - httpApi:
          path: /express/dashboard/settings
          method: post

  checkExpressAccountStatus:
    handler: src/handlers/stripe.checkExpressAccountStatus
    events:
      - httpApi:
          path: /express/accounts/{accountId}/status
          method: get

  # Standard Account Functions
  createStandardOnboarding:
    handler: src/handlers/stripe.createStandardOnboardingLink
    events:
      - httpApi:
          path: /standard/onboarding
          method: post

  createStandardDashboard:
    handler: src/handlers/stripe.createStandardDashboardLink
    events:
      - httpApi:
          path: /standard/dashboard
          method: post

  # Account Management Functions
  getAccounts:
    handler: src/handlers/stripe.getAllAccounts
    events:
      - httpApi:
          path: /get-all-accounts
          method: get

  deleteAccount:
    handler: src/handlers/stripe.deleteAccount
    events:
      - httpApi:
          path: /delete-account
          method: delete

  updateAccount:
    handler: src/handlers/stripe.updateAccountSettings
    events:
      - httpApi:
          path: /update-account-settings
          method: post

  checkAccountStatus:
    handler: src/handlers/stripe.checkAccountStatus
    events:
      - httpApi:
          path: /check-account-status
          method: get

  # Payment Functions
  createPayment:
    handler: src/handlers/stripe.createPayment
    events:
      - httpApi:
          path: /create-payment
          method: post

plugins:
  - serverless-offline
  - serverless-dotenv-plugin

custom:
  serverless-offline:
    httpPort: 3001
    noPrependStageInUrl: true
